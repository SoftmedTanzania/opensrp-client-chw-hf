{
  "count": "2",
  "encounter_type": "Family Registration",
  "entity_id": "",
  "relational_id": "",
  "metadata": {
    "start": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "start",
      "openmrs_entity_id": "163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "end": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "end",
      "openmrs_entity_id": "163138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "deviceid": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "deviceid",
      "openmrs_entity_id": "163149AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "subscriberid": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "subscriberid",
      "openmrs_entity_id": "163150AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "simserial": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "simserial",
      "openmrs_entity_id": "163151AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "phonenumber": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "phonenumber",
      "openmrs_entity_id": "163152AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "encounter_location": "",
    "look_up": {
      "entity_id": "",
      "value": ""
    }
  },
  "step1": {
    "title": "Family details",
    "next": "step2",
    "fields": [
      {
        "key": "fam_name",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person",
        "openmrs_entity_id": "first_name",
        "type": "edit_text",
        "hint": "Family name (Family Head's Surname)",
        "edit_type": "name",
        "v_required": {
          "value": "true",
          "err": "Please enter the family name"
        },
        "v_regex": {
          "value": "[A-Za-z\\u00C0-\\u017F\\s\\u00C0-\\u017F\\.\\-\\']*",
          "err": "Please enter a valid name"
        }
      },
      {
        "key": "client_first_name",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person",
        "openmrs_entity_id": "first_name",
        "type": "edit_text",
        "hint": "Family Head's First name",
        "edit_type": "name",
        "v_required": {
          "value": "true",
          "err": "Please enter the first name"
        },
        "v_regex": {
          "value": "[A-Za-z\\u00C0-\\u017F\\s\\u00C0-\\u017F\\.\\-\\']*",
          "err": "Please enter a valid name"
        }
      },
      {
        "key": "client_middle_name",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person",
        "openmrs_entity_id": "middle_name",
        "type": "edit_text",
        "hint": "Family Head's Middle name",
        "edit_type": "name",
        "v_regex": {
          "value": "[A-Za-z\\u00C0-\\u017F\\s\\u00C0-\\u017F\\.\\-\\']*",
          "err": "Please enter a valid name"
        },
        "v_required": {
          "value": "true",
          "err": "Please enter the middle name"
        }
      },
      {
        "key": "unique_id",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_identifier",
        "openmrs_entity_id": "opensrp_id",
        "hidden": "true",
        "type": "edit_text",
        "barcode_type": "qrcode",
        "hint": "ID",
        "scanButtonText": "Scan QR Code",
        "v_numeric": {
          "value": "true",
          "err": "Please enter a valid ID"
        }
      },
      {
        "key": "fam_village",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_address",
        "openmrs_entity_id": "cityVillage",
        "type": "edit_text",
        "edit_type": "name",
        "hint": "Area Name",
        "v_required": {
          "value": "true",
          "err": "Please enter the area name"
        }
      },
      {
        "key": "landmark",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_address",
        "openmrs_entity_id": "landmark",
        "type": "edit_text",
        "hint": "Landmark/Description of house location",
        "v_required": {
          "value": true,
          "err": "Please enter the landmark/description of location."
        }
      },
      {
        "key": "spacer",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "",
        "type": "spacer",
        "spacer_height": "15dp"
      },
      {
        "key": "sync_location_id",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "sync_location_id",
        "type": "spinner",
        "hint": "Select CHW Location",
        "v_required": {
          "value": "true",
          "err": "Please select CHW Location"
        }
      }
    ]
  },
  "step2": {
    "title": "Family head",
    "fields": [
      {
        "key": "unique_id",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_identifier",
        "openmrs_entity_id": "opensrp_id",
        "type": "edit_text",
        "hint": "ID",
        "value": "0",
        "read_only": "true",
        "v_numeric": {
          "value": "true",
          "err": "Please enter a valid ID"
        },
        "v_required": {
          "value": "true",
          "err": "Please enter the ID"
        }
      },
      {
        "key": "first_name",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person",
        "openmrs_entity_id": "first_name",
        "type": "edit_text",
        "hint": "First name",
        "edit_type": "name",
        "v_required": {
          "value": "true",
          "err": "Please enter the first name"
        },
        "v_regex": {
          "value": "[A-Za-z\\u00C0-\\u017F\\s\\u00C0-\\u017F\\.\\-\\']*",
          "err": "Please enter a valid name"
        },
        "read_only": true,
        "calculation": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_calculation.yml"
            }
          }
        }
      },
      {
        "key": "middle_name",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person",
        "openmrs_entity_id": "middle_name",
        "type": "edit_text",
        "hint": "Middle name",
        "edit_type": "name",
        "v_required": {
          "value": "true",
          "err": "Please enter the middle name"
        },
        "v_regex": {
          "value": "[A-Za-z\\u00C0-\\u017F\\s\\u00C0-\\u017F\\.\\-\\']*",
          "err": "Please enter a valid name"
        },
        "read_only": true,
        "calculation": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_calculation.yml"
            }
          }
        }
      },
      {
        "key": "surname",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "last_name",
        "type": "edit_text",
        "hint": "Surname",
        "edit_type": "name",
        "read_only": "true",
        "v_regex": {
          "value": "[A-Za-z\\u00C0-\\u017F\\s\\u00C0-\\u017F\\.\\-\\']*",
          "err": "Please enter a valid name"
        },
        "calculation": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_calculation.yml"
            }
          }
        }
      },
      {
        "key": "dob",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person",
        "openmrs_entity_id": "birthdate",
        "type": "date_picker",
        "hint": "Date of birth (DOB)",
        "expanded": false,
        "duration": {
          "label": "Age"
        },
        "min_date": "today-120y",
        "max_date": "today-15y",
        "v_required": {
          "value": "true",
          "err": "Please enter the date of birth"
        },
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "age_calculated",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "",
        "type": "hidden",
        "calculation": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_calculation.yml"
            }
          }
        }
      },
      {
        "key": "dob_unknown",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person",
        "openmrs_entity_id": "birthdateApprox",
        "type": "check_box",
        "label": "",
        "options": [
          {
            "key": "dob_unknown",
            "text": "DOB unknown?",
            "text_size": "18px",
            "value": "false"
          }
        ],
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "age",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "age_entered",
        "type": "edit_text",
        "hint": "Age",
        "v_numeric": {
          "value": "true",
          "err": "Number must begin with 0 and must be a total of 10 digits in length"
        },
        "v_min": {
          "value": "15",
          "err": "Age must be equal or greater than 15"
        },
        "v_max": {
          "value": "120",
          "err": "Age must be equal or less than 120"
        },
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        },
        "v_required": {
          "value": true,
          "err": "Please enter the age"
        }
      },
      {
        "key": "sex",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person",
        "openmrs_entity_id": "gender",
        "type": "spinner",
        "hint": "Sex",
        "values": [
          "Male",
          "Female"
        ],
        "keys": [
          "Male",
          "Female"
        ],
        "v_required": {
          "value": "true",
          "err": "Please enter the sex"
        }
      },
      {
        "key": "marital_status",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "marital_status",
        "type": "spinner",
        "hint": "Client's Marital Status?",
        "values": [
          "Single",
          "Married",
          "Divorced",
          "Widowed",
          "Cohabitation"
        ],
        "keys": [
          "Single",
          "Married",
          "Divorced",
          "Widowed",
          "Cohabitation"
        ],
        "openmrs_choice_ids": {
          "Single": "Single",
          "Married": "Married",
          "Divorced": "Divorced",
          "Widowed": "Widowed",
          "Cohabitation": "Cohabitation"
        },
        "v_required": {
          "value": "true",
          "err": "Please select one"
        },
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "phone_number",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "phone_number",
        "type": "edit_text",
        "hint": "Phone number",
        "v_numeric": {
          "value": "true",
          "err": "Number must be a total of 10 digits in length"
        },
        "v_regex": {
          "value": "(0[6-7][1-9][0-9][0-9]{6})|\\s*",
          "err": "Number must be 10 digits and must start with 06 or 07."
        }
      },
      {
        "key": "id_avail",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "id_avail",
        "type": "check_box",
        "label": "Does he/she have any of the following IDs?",
        "combine_checkbox_option_values": "true",
        "label_text_style": "normal",
        "text_color": "#C0C0C0",
        "exclusive": [
          "chk_none"
        ],
        "options": [
          {
            "key": "chk_national_id",
            "text": "National ID",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "chk_national_id"
          },
          {
            "key": "chk_voters_id",
            "text": "Voter's registration ID",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "chk_voters_id"
          },
          {
            "key": "chk_drivers_license",
            "text": "Driver's license",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "chk_drivers_license"
          },
          {
            "key": "chk_none",
            "text": "None",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "chk_none"
          }
        ],
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "national_id",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "National_ID",
        "type": "mask_edit_text",
        "mask": "########-#####-#####-##",
        "mask_hint": "12345678912345678912",
        "allowed_chars": "0123456789",
        "hint": "National ID number e.g 12345678-91234-56789-12",
        "edit_type": "number",
        "v_regex": {
          "value": "^\\d{8}-\\d{5}-\\d{5}-\\d{2}$",
          "err": "National ID number should be of the format (XXXXXXXX-XXXXX-XXXXX-XX)"
        },
        "v_max_length": {
          "value": "23",
          "is_fixed_size": "true",
          "err": "Please enter a valid national id"
        },
        "v_required": {
          "value": true,
          "err": "Please enter a valid national ID"
        },
        "relevance": {
          "step2:id_avail": {
            "ex-checkbox": [
              {
                "or": [
                  "chk_national_id"
                ]
              }
            ]
          }
        }
      },
      {
        "key": "voter_id",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "Voter_Registration_Number",
        "type": "mask_edit_text",
        "mask": "T-####-####-###-#",
        "mask_hint": "123456789123",
        "allowed_chars": "0123456789",
        "hint": "Voter's registration number e.g T-1234-5678-912-3",
        "edit_type": "number",
        "v_regex": {
          "value": "^T-\\d{4}-\\d{4}-\\d{3}-\\d{1}$",
          "err": "Voter's registration number should be of the format (T-XXXX-XXXX-XXX-X)"
        },
        "v_max_length": {
          "value": "17",
          "is_fixed_size": "true",
          "err": "Please enter a valid voters registration"
        },
        "v_required": {
          "value": true,
          "err": "Please enter a valid voters registration number"
        },
        "relevance": {
          "step2:id_avail": {
            "ex-checkbox": [
              {
                "or": [
                  "chk_voters_id"
                ]
              }
            ]
          }
        }
      },
      {
        "key": "driver_license",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "Driver_License_Number",
        "type": "mask_edit_text",
        "mask": "##########",
        "mask_hint": "1234567891",
        "allowed_chars": "0123456789",
        "hint": "Driver's license number e.g 1234567891",
        "edit_type": "number",
        "v_max_length": {
          "value": "10",
          "is_fixed_size": "true",
          "err": "Please enter a valid drivers license number"
        },
        "v_regex": {
          "value": "^([0-9]{10})",
          "err": "Driver's license number should be of the format (XXXXXXXXXX)"
        },
        "v_required": {
          "value": true,
          "err": "Please enter a valid driver's license number"
        },
        "relevance": {
          "step2:id_avail": {
            "ex-checkbox": [
              {
                "or": [
                  "chk_drivers_license"
                ]
              }
            ]
          }
        }
      },
      {
        "key": "insurance_provider",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "Health_Insurance_Type",
        "type": "spinner",
        "hint": "Health insurance provider",
        "values": [
          "Community Health Fund (CHF)/(iCHF)",
          "National Social Security Fund - Social Health Insurance Benefit (SHIB)",
          "National Health Insurance Fund (NHIF)",
          "Tiba Kwa Kadi (TIKA)",
          "AAR Healthcare",
          "Strategies Insurance",
          "Milvik Tanzania Ltd (BIMA Mkononi)",
          "Britam Insurance Tanzania",
          "Jubilee Insurance",
          "Resolutions Insurance",
          "Reliance Insurance",
          "Other",
          "None"
        ],
        "keys": [
          "Community Health Fund (CHF)",
          "National Social Security Fund - Social Health Insurance Benefit (SHIB)",
          "National Health Insurance Fund (NHIF)",
          "Tiba Kwa Kadi (TIKA)",
          "AAR Healthcare",
          "Strategies Insurance",
          "Milvik Tanzania Ltd (BIMA Mkononi)",
          "Britam Insurance Tanzania",
          "Jubilee Insurance",
          "Resolutions Insurance",
          "Reliance Insurance",
          "Other",
          "None"
        ],
        "openmrs_choice_ids": {
          "Community Health Fund (CHF)": "Community_Health_Fund",
          "National Social Security Fund - Social Health Insurance Benefit (SHIB)": "National_Social_Security_Fund",
          "National Health Insurance Fund (NHIF)": "National_Health_Insurance_Fund",
          "Tiba Kwa Kadi (TIKA)": "Tiba_kwa_Kadi",
          "AAR Healthcare": "AAR_Healthcare",
          "AAR Strategies Insurance": "Strategies_Insurance",
          "Milvik Tanzania Ltd (BIMA Mkononi)": "BIMA_Mkononi",
          "Britam Insurance Tanzania": "Britam_Insurance_Tanzania",
          "Jubilee Insurance": "Jubilee_Insurance",
          "Resolutions Insurance": "Resolutions_Insurance",
          "Reliance Insurance": "Reliance_Insurance",
          "Other": "Other_Health_Insurance_Type",
          "None": "No_Health_Insurance"
        },
        "v_required": {
          "value": "true",
          "err": "Please enter the insurance provider"
        }
      },
      {
        "key": "insurance_provider_other",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "Other_Health_Insurance_Type",
        "type": "edit_text",
        "hint": "Other health insurance provider",
        "v_required": {
          "value": "true",
          "err": "Please specify the insurance provider"
        },
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "insurance_provider_number",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "Health_Insurance_Number",
        "type": "edit_text",
        "hint": "Health insurance provider number",
        "v_required": {
          "value": "true",
          "err": "Please add the health insurance provider iD Number"
        },
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "wra",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "",
        "type": "hidden",
        "calculation": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_calculation.yml"
            }
          }
        }
      },
      {
        "key": "mra",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "",
        "type": "hidden",
        "values": ""
      },
      {
        "key": "preg_1yr",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "preg_1yr",
        "type": "spinner",
        "hint": "Has the woman delivered in the last 1 year?",
        "values": [
          "Yes",
          "No"
        ],
        "keys": [
          "Yes",
          "No"
        ],
        "openmrs_choice_ids": {
          "Yes": "Yes",
          "No": "No"
        },
        "v_required": {
          "value": "true",
          "err": "Please select if the woman has delivered in the last 1 year"
        },
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "disabilities",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "disabilities",
        "type": "spinner",
        "hint": "Physical disabilities",
        "values": [
          "Yes",
          "No"
        ],
        "keys": [
          "Yes",
          "No"
        ],
        "openmrs_choice_ids": {
          "Yes": "Yes",
          "No": "No"
        },
        "v_required": {
          "value": "true",
          "err": "Please select one"
        }
      },
      {
        "key": "type_of_disability",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "type_of_disability",
        "type": "check_box",
        "label": "Type of disability",
        "combine_checkbox_option_values": "true",
        "label_text_style": "normal",
        "text_color": "#C0C0C0",
        "options": [
          {
            "key": "physical_impairments",
            "text": "Mobility and Physical Impairments",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "physical_impairments"
          },
          {
            "key": "spinal_cord_disability",
            "text": "Spinal Cord Disability",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "spinal_cord_disability"
          },
          {
            "key": "brain_disability",
            "text": "Head Injuries - Brain Disability",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "brain_disability"
          },
          {
            "key": "vision_disability",
            "text": "Vision Disability",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "vision_disability"
          },
          {
            "key": "hearing_disability",
            "text": "Hearing Disability",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "hearing_disability"
          },
          {
            "key": "learning_disabilities",
            "text": "Cognitive or Learning Disabilities",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "learning_disabilities"
          },
          {
            "key": "psychological_disorders",
            "text": "Psychological Disorders",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "psychological_disorders"
          },
          {
            "key": "invisible_disabilities",
            "text": "Invisible Disabilities",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "invisible_disabilities"
          }
        ],
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "other_phone_number",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "other_phone_number",
        "type": "edit_text",
        "hint": "Other phone number",
        "v_numeric": {
          "value": "true",
          "err": "Number must be a total of 10 digits in length"
        },
        "v_regex": {
          "value": "(0[6-7][1-9][0-9][0-9]{6})|\\s*",
          "err": "Number must be 10 digits and must start with 06 or 07."
        }
      },
      {
        "key": "service_provider",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "service_provider",
        "type": "native_radio",
        "label": "Occupation of the family head",
        "label_text_style": "normal",
        "text_color": "#C0C0C0",
        "options": [
          {
            "key": "chk_self_employed",
            "text": "Self-Employed",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "chk_self_employed"
          },
          {
            "key": "chk_employed",
            "text": "Employed",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "chk_employed"
          },
          {
            "key": "chk_unemployed",
            "text": "Unemployed",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "chk_unemployed"
          },
          {
            "key": "chk_farmer",
            "text": "Farmer",
            "openmrs_entity": "concept",
            "openmrs_entity_id": "chk_farmer"
          }
        ],
        "v_required": {
          "value": "true",
          "err": "Please pick at least one"
        },
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "leader",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "Community_Leader",
        "type": "check_box",
        "combine_checkbox_option_values": "true",
        "label": "Any leadership role in the community?",
        "label_text_style": "normal",
        "text_color": "#C0C0C0",
        "exclusive": [
          "chk_none"
        ],
        "options": [
          {
            "key": "chk_religious",
            "text": "Religious leader",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "Religious_Leader"
          },
          {
            "key": "chk_traditional",
            "text": "Traditional leader",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "Traditional_leader"
          },
          {
            "key": "chk_political",
            "text": "Political leader",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "Political_leader"
          },
          {
            "key": "chk_influential",
            "text": "Influential leader",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "Influential_Leader"
          },
          {
            "key": "chk_other",
            "text": "Other",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "Other_Community_Leader_Type"
          },
          {
            "key": "chk_none",
            "text": "None",
            "openmrs_entity": "person_attribute",
            "openmrs_entity_id": "Not_a_Community_Leader"
          }
        ],
        "v_required": {
          "value": "true",
          "err": "Please pick at least one"
        },
        "relevance": {
          "rules-engine": {
            "ex-rules": {
              "rules-file": "family_register_relevance.yml"
            }
          }
        }
      },
      {
        "key": "leader_other",
        "openmrs_entity_parent": "",
        "openmrs_entity": "person_attribute",
        "openmrs_entity_id": "Other_Community_Leader_Type_Name",
        "type": "edit_text",
        "hint": "Mention other role in the community",
        "edit_type": "name",
        "v_required": {
          "value": "true",
          "err": "Please specify role"
        },
        "relevance": {
          "step2:leader": {
            "ex-checkbox": [
              {
                "or": [
                  "chk_other"
                ]
              }
            ]
          }
        }
      }
    ]
  }
}